{"version":3,"sources":["theme.js","ColorModeSwitcher.js","services/blogService.js","components/Blogs.js","services/loginService.js","components/Notification.js","components/LoginForm.js","components/Logout.js","components/AddBlog.js","App.js","index.js"],"names":["theme","extendTheme","config","initialColorMode","useSystemColorMode","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","baseUrl","token","getAll","a","axios","get","response","data","setToken","newToken","create","newObject","headers","Authorization","post","update","id","put","Blogs","blogs","divider","borderColor","borderWidth","p","borderRadius","w","maxW","base","sm","lg","xl","alignItems","justifySelf","map","blog","title","author","href","url","isExternal","ExternalLink","mx","login","credentials","Notification","message","colorScheme","toString","m","LoginForm","setUsername","username","handleLogin","password","setPassword","onSubmit","spacing","children","type","value","name","onChange","target","px","Logout","user","handleLogout","AddBlog","newBlog","addBlog","handleBlogChange","alignSelf","App","useState","setBlogs","errorMessage","setErrorMessage","setUser","setNewBlog","setColor","localStorageKey","useEffect","blogService","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","event","preventDefault","console","log","loginService","setItem","stringify","handleErrorMessageChange","newMessage","setTimeout","blogObject","returnedBlog","concat","height","mr","isRound","mb","fontWeight","bgGradient","bgClip","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.229cea7c.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n// 2. Add your color mode config\nconst config = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false,\n};\n// 3. extend the theme\nconst theme = extendTheme({ config });\nexport default theme;\n","import React from 'react';\nimport { IconButton, useColorMode, useColorModeValue } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/blogs\";\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nexport default { getAll, setToken, create, update };\n","import { Box, Link, StackDivider, Text, VStack } from \"@chakra-ui/react\";\nimport { ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport React from \"react\";\n\nconst Blogs = ({ blogs }) => {\n  return (\n    <VStack\n      divider={<StackDivider />}\n      borderColor=\"gray.100\"\n      borderWidth=\"2px\"\n      p=\"4\"\n      borderRadius=\"lg\"\n      w=\"100%\"\n      maxW={{ base: \"90vw\", sm: \"80vw\", lg: \"50vw\", xl: \"40vw\" }}\n      alignItems=\"strech\"\n      justifySelf={\"center\"}\n    >\n      {blogs.map((blog) => (\n        <VStack key={blog.id} justifySelf={\"left\"} alignItems={\"left\"}>\n          <Box>\n            <Text>\n              {\" \"}\n              <b>Blog Title:</b> {blog.title}\n            </Text>\n          </Box>\n          <Box>\n            <Text>\n              {\" \"}\n              <b>Author</b>: {blog.author}\n            </Text>\n          </Box>\n          <Box>\n            <Text>\n              {\" \"}\n              <b>URL:</b>{\" \"}\n              <Link href={blog.url} isExternal>\n                <ExternalLinkIcon mx={\"2px\"} />\n              </Link>\n            </Text>\n          </Box>\n        </VStack>\n      ))}\n    </VStack>\n  );\n};\n\nexport default Blogs;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React from \"react\";\nimport { Badge } from \"@chakra-ui/react\";\n\nconst Notification = ({ message, color }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <Badge colorScheme={color.toString()} p=\"4\" m=\"4\" borderRadius=\"lg\">\n      {message}\n    </Badge>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  VStack,\n} from \"@chakra-ui/react\";\n\nconst LoginForm = ({\n  setUsername,\n  username,\n  handleLogin,\n  password,\n  setPassword,\n}) => {\n  return (\n    <form onSubmit={handleLogin}>\n      <VStack spacing={4}>\n        <InputGroup>\n          <InputLeftAddon children=\"username:\" />\n          <Input\n            type=\"text\"\n            value={username}\n            name={\"Username\"}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftAddon children=\"password:\" />\n          <Input\n            type=\"password\"\n            value={password}\n            name={\"Password\"}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </InputGroup>\n        <Button type=\"submit\" colorScheme={\"pink\"} px={8}>\n          login\n        </Button>\n      </VStack>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Button, HStack, Text } from \"@chakra-ui/react\";\n\nconst Logout = ({ user, handleLogout }) => {\n  return (\n    <HStack>\n      <Text>{user.name} logged-in</Text>\n      <Button colorScheme={\"pink\"} px={8} onClick={handleLogout}>\n        logout\n      </Button>\n    </HStack>\n  );\n};\n\nexport default Logout;\n","import React from \"react\";\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  VStack,\n} from \"@chakra-ui/react\";\n\nconst AddBlog = ({ newBlog, addBlog, handleBlogChange }) => {\n  return (\n    <form onSubmit={addBlog}>\n      <VStack p={8} spacing={4}>\n        <InputGroup>\n          <InputLeftAddon children=\"title:\" />\n          <Input\n            type=\"text\"\n            value={newBlog.title}\n            variant={\"filled\"}\n            onChange={handleBlogChange}\n            name=\"title\"\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftAddon children=\"author:\" />\n          <Input\n            type=\"text\"\n            value={newBlog.author}\n            variant={\"filled\"}\n            onChange={handleBlogChange}\n            name=\"author\"\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftAddon children=\"url:\" />\n          <Input\n            type=\"text\"\n            value={newBlog.url}\n            variant={\"filled\"}\n            onChange={handleBlogChange}\n            name=\"url\"\n          />\n        </InputGroup>\n        <Button type=\"submit\" colorScheme={\"pink\"} px={8} alignSelf={\"left\"}>\n          add blog\n        </Button>\n      </VStack>\n    </form>\n  );\n};\n\nexport default AddBlog;\n","import { Heading, VStack } from \"@chakra-ui/react\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport blogService from \"./services/blogService\";\nimport Blogs from \"./components/Blogs\";\nimport loginService from \"./services/loginService\";\nimport Notification from \"./components/Notification\";\nimport LoginForm from \"./components/LoginForm\";\nimport Logout from \"./components/Logout\";\nimport AddBlog from \"./components/AddBlog\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [newBlog, setNewBlog] = useState({\n    title: \"\",\n    author: \"\",\n    url: \"\",\n  });\n  const [color, setColor] = useState(\"red\");\n  const localStorageKey = \"loggedBlogappUser\";\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(localStorageKey);\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    console.log(\"logging in with\", username);\n    try {\n      const user = await loginService.login({ username, password });\n      window.localStorage.setItem(localStorageKey, JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      handleErrorMessageChange(\"Wrong Credentials\", \"red\");\n    }\n  };\n\n  const handleErrorMessageChange = (newMessage, color) => {\n    setErrorMessage(newMessage);\n    setColor(color);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  const addBlog = async (event) => {\n    event.preventDefault();\n    const blogObject = {\n      title: newBlog.title,\n      author: newBlog.author,\n      url: newBlog.url,\n    };\n    try {\n      const returnedBlog = await blogService.create(blogObject);\n      setBlogs(blogs.concat(returnedBlog));\n      setNewBlog({ title: \"\", author: \"\", url: \"\" });\n      handleErrorMessageChange(\n        `New Blog! ${returnedBlog.title} by ${returnedBlog.author} added`,\n        \"green\"\n      );\n    } catch (exception) {\n      handleErrorMessageChange(\"Cannot post blog\", \"red\");\n    }\n  };\n\n  const loginForm = () => (\n    <LoginForm\n      password={password}\n      handleLogin={handleLogin}\n      setPassword={setPassword}\n      username={username}\n      setUsername={setUsername}\n    />\n  );\n\n  const handleLogout = () => {\n    window.localStorage.removeItem(localStorageKey);\n    setUser(\"\");\n  };\n\n  const handleBlogChange = (event) => {\n    const value = event.target.value;\n    setNewBlog({ ...newBlog, [event.target.name]: value });\n  };\n\n  console.log(newBlog);\n\n  if (user === \"\") {\n    return (\n      <VStack spacing={4} p={8} height=\"100vh\">\n        <ColorModeSwitcher alignSelf=\"flex-end\" mr={\"8\"} isRound={\"true\"} />\n        <Heading\n          mb=\"4\"\n          fontWeight=\"extrabold\"\n          size=\"2xl\"\n          bgGradient=\"linear(to-r,pink.500,pink.300,blue.500)\"\n          bgClip=\"text\"\n        >\n          Blogs\n        </Heading>\n        <Notification message={errorMessage} color={color} />\n        {loginForm()}\n      </VStack>\n    );\n  }\n\n  return (\n    <VStack spacing={4} p={8} height=\"100vh\">\n      <ColorModeSwitcher alignSelf=\"flex-end\" mr={\"8\"} isRound={\"true\"} />\n      <Heading\n        mb=\"4\"\n        fontWeight=\"extrabold\"\n        size=\"2xl\"\n        bgGradient=\"linear(to-r,pink.500,pink.300,blue.500)\"\n        bgClip=\"text\"\n      >\n        Blogs\n      </Heading>\n      <Notification message={errorMessage} color={color} />\n      <Logout user={user} handleLogout={handleLogout} />\n      <AddBlog\n        addBlog={addBlog}\n        handleBlogChange={handleBlogChange}\n        newBlog={newBlog}\n      />\n      <Blogs blogs={blogs} />\n    </VStack>\n  );\n};\n\nexport default App;\n\n/*\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Box textAlign=\"center\" fontSize=\"xl\">\n        <Grid minH=\"100vh\" p={3}>\n          <ColorModeSwitcher justifySelf=\"flex-end\" />\n          <VStack spacing={8}>\n            <Logo h=\"40vmin\" pointerEvents=\"none\" />\n            <Text>\n              Edit <Code fontSize=\"xl\">src/App.js</Code> and save to reload.\n            </Text>\n            <Link\n              color=\"teal.500\"\n              href=\"https://chakra-ui.com\"\n              fontSize=\"2xl\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn Chakra\n            </Link>\n          </VStack>\n        </Grid>\n      </Box>\n    </ChakraProvider>\n  );\n}\n */\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}